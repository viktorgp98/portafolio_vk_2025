---
import "@/styles/global.css";
const { title = "Viktor Gonzalez P |  FullStack Web Developer Junior" } =
  Astro.props;
import Footer from "@/components/Footer.astro";
import "lenis/dist/lenis.css";
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width , initial-scale=1.0" />
    <title>{title}</title>
    <link
      rel="icon"
      type="image/svg+xml"
      href="/favicon.svg"
      style="height: 16px; width: 16px;"
    />
    <meta
      name="description"
      content="Portafolio de Viktor Ariel González Pinto, Analista Programador con experiencia en desarrollo web.  Explora mis proyectos en  React, Python, Wordpress y más. 
      Descubre mis habilidades en  React, Node, Bases de Datos y Gestión de Proyectos."
    />
  </head>
  <body>
    <div
      class="fixed top-2 right-2 z-10 w-6 h-6 bg-dark dark:bg-light rounded-full shadow-lg overflow-hidden"
    >
      <button
        id="toggle-theme"
        class="cursor-pointer object-cover w-full h-full text-light icon-[ph--moon-duotone] dark:icon-[ph--sun-dim-duotone] dark:text-dark dark:w-full dark:h-full"
      ></button>
    </div>

    <main>
      <slot />
    </main>
    <Footer />

    <script>
      import Lenis from "lenis";
      import gsap from "gsap";
      import { ScrollTrigger } from "gsap/ScrollTrigger";
      const lenis = new Lenis({
        anchors: true,
        orientation: "vertical",
        easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
        duration: 1.3,
      });

      lenis.on("scroll", ScrollTrigger.update);
      gsap.ticker.add((time) => {
        lenis.raf(time * 1000);
      });
      gsap.ticker.lagSmoothing(0);
      gsap.registerPlugin(ScrollTrigger);
      ScrollTrigger.normalizeScroll(true); // enable

      let sections = gsap.utils.toArray(".section");
      let tl, tl2;

      /* sections.forEach((section: any) => {
        tl = gsap.timeline({
          scrollTrigger: {
            trigger: section,
            start: "bottom bottom",
            end: "bottom top",
            scrub: true,
            markers: false,
          },
        });
        tl.to(section, {
          yPercent: 100,
          ease: "none",
        });
      }); */
      tl = gsap.timeline({
        scrollTrigger: {
          trigger: ".secc-experience",
          start: "top bottom",
          end: "top top",
          scrub: true,
          markers: false,
        },
      });

      tl.to(".secc-hero", {
        yPercent: 100,
        ease: "none",
      });
      tl2 = gsap.timeline({
        scrollTrigger: {
          trigger: ".secc-about",
          start: "top bottom",
          end: "top top",
          scrub: true,
          markers: false,
        },
      });

      tl2.to(".secc-projects", {
        yPercent: 100,
        ease: "none",
      });

      /* Toggle theme */
      const themeToggle = document.getElementById("toggle-theme");
      const htmlElement = document.documentElement;

      themeToggle?.addEventListener("click", () => {
        htmlElement.classList.toggle("dark");
        const newTheme = htmlElement.classList.contains("dark")
          ? "dark"
          : "light";
        console.log(`Theme changed to ${newTheme}`);
      });
    </script>
  </body>

  <link rel="stylesheet" href="https://unpkg.com/lenis@1.2.3/dist/lenis.css" />
  <style>
    html,
    body {
      margin: 0px;
      width: 100%;
      height: 100%;
    }
    main {
      min-height: 100vh;
    }
  </style>
</html>
